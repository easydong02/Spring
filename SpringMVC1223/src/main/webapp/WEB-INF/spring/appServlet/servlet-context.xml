<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 이 어플리케이션에서 사용할 뷰 리절버 접두어, 접미어를 이요하여 jsp를 반환하는 해석자-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/"/>
		<beans:property name="suffix" value=".jsp"/>
	</beans:bean>
	
	<!-- 우리가 제작한 프레임워크에서 mapping.data 파일로 컨트롤러 매핑과 뷰매핑을 처리했듯이
		스프링에서는 xml설정파일에서 매핑을 처리한다.
	 -->
	 
	 <!-- 요청을 처리할 동생 컨트롤러를 검색 및 반환할 전담 객체를 핸들러 매핑, 여러 종류가 있음. 취향대로 써도되는데
	 스프링 3.x 이후부터는 디폴트 핸들러 매핑이 있다. -->
	 <beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	 	<beans:property name="alwaysUseFullPath" value="true"/>
	 	<beans:property name="mappings">
	 		<beans:props>
	 			<beans:prop key="/test">testController</beans:prop>	 		
	 			<beans:prop key="/notice/regist">registController</beans:prop>	 		
	 			<beans:prop key="/notice/list">listController</beans:prop>	 		
	 			<beans:prop key="/notice/detail">detailController</beans:prop>	 		
	 			<beans:prop key="/notice/update">updateController</beans:prop>	 		
	 			<beans:prop key="/notice/delete">deleteController</beans:prop>	 		
	 		</beans:props>
	 	</beans:property>
	 </beans:bean>
	 
	 
	 
	 <!-- 동생컨트롤러 등록 -->
	 <beans:bean class="com.koreait.springmvc1223.test.TestController" id="testController"/>
	 
	 <!-- 이 어플리케이션에 사용할 빈들 등록 -->
	 
	 <!-- PoolManager -->
	 
	 <beans:bean class="com.koreait.springmvc1223.pool.PoolManager" id="poolManager" factory-method="getInstance"></beans:bean>
	 <beans:bean class="com.koreait.springmvc1223.mybatis.MybatisConfig" id="mybatisConfig" factory-method="getInstance"></beans:bean>
	 
	 <!-- Pager 등록 -->
	 <beans:bean class="com.koreait.springmvc1223.util.Pager" id ="pager"></beans:bean>
	 
	 <!-- DAO들 -->
	 <beans:bean class="com.koreait.springmvc1223.model.repository.notice.MybatisNoticeDAO" id ="mybatisNoticeDAO">
	 	<beans:property name="mybatisConfig" ref="mybatisConfig"></beans:property>
	 </beans:bean>
	 <beans:bean class="com.koreait.springmvc1223.model.repository.notice.JdbcNoticeDAO" id="jdbcNoticeDAO">
	 	<beans:property name="pool" ref="poolManager"/>
	 </beans:bean>
	 
	 <!-- 서비스 -->
	 <beans:bean class="com.koreait.springmvc1223.model.service.notice.NoticeServiceImpl" id="noticeServiceImpl">
	 	<beans:property name="noticeDAO" ref="mybatisNoticeDAO"/>
	 </beans:bean>
	 
	 <!-- 컨트롤러 -->
	 <beans:bean class="com.koreait.springmvc1223.controller.notice.RegistController" id="registController">
	 	<beans:property name="noticeService" ref="noticeServiceImpl"></beans:property>
	 </beans:bean>
	 <beans:bean class = "com.koreait.springmvc1223.controller.notice.DetailController" id="detailController">
	 	<beans:property name="noticeService" ref="noticeServiceImpl"></beans:property>
	 </beans:bean>
	 
	 
	 <beans:bean class="com.koreait.springmvc1223.controller.notice.ListController" id="listController">
	 	<beans:property name="noticeService" ref="noticeServiceImpl"></beans:property>
	 	<beans:property name="pager" ref="pager"></beans:property>
	 </beans:bean>
	 
	 <beans:bean class="com.koreait.springmvc1223.controller.notice.UpdateController" id ="updateController">
	 	<beans:property name="noticeService" ref="noticeServiceImpl"></beans:property>
	 </beans:bean>
	 
	 <beans:bean class="com.koreait.springmvc1223.controller.notice.DeleteController" id ="deleteController">
	 
	 	<beans:property name="noticeService" ref="noticeServiceImpl"></beans:property>
	 
	 </beans:bean>
	
	<context:component-scan base-package="com.koreait.springmvc1223" />
	
	
	
</beans:beans>
